{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\aas_8\\\\Desktop\\\\restaurant stripe\\\\components\\\\RestaurantList.js\";\n\nimport _JSXStyle from \"styled-jsx/style\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  {\\n    restaurants {\\n      _id\\n      name\\n      description\\n      image {\\n        url\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\n/* components/RestaurantList/index.js */\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { graphql } from \"react-apollo\";\nimport { Card, CardBody, CardImg } from \"reactstrap\";\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\nimport { env } from \"../../utils/constants\";\n\nvar RestaurantList = function RestaurantList(_ref, req) {\n  var _ref$data = _ref.data,\n      loading = _ref$data.loading,\n      error = _ref$data.error,\n      restaurants = _ref$data.restaurants,\n      search = _ref.search;\n  if (error) return \"Error loading restaurants\"; //if restaurants are returned from the GraphQL query, run the filter query\n  //and set equal to variable restaurantSearch\n\n  if (restaurants && restaurants.length) {\n    //searchQuery\n    var searchQuery = restaurants.filter(function (query) {\n      return query.name.toLowerCase().includes(search);\n    });\n\n    if (searchQuery.length != 0) {\n      return __jsx(\"div\", {\n        className: \"jsx-1272619790\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, __jsx(\"div\", {\n        className: \"jsx-1272619790\" + \" \" + \"h-100\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }\n      }, searchQuery.map(function (res) {\n        return __jsx(Card, {\n          style: {\n            width: \"30%\",\n            margin: \"0 10px\"\n          },\n          className: \"h-100\",\n          key: res._id,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }\n        }, __jsx(CardImg, {\n          top: true,\n          style: {\n            height: 250\n          },\n          src: \"\".concat(env.API_URL, \"/\").concat(res.image.url),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 17\n          }\n        }), __jsx(CardBody, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }\n        }, __jsx(CardTitle, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }\n        }, res.name), __jsx(CardText, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 19\n          }\n        }, res.description)), __jsx(\"div\", {\n          className: \"jsx-1272619790\" + \" \" + \"card-footer\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }\n        }, __jsx(Link, {\n          as: \"/restaurants/\".concat(res._id),\n          href: \"/restaurants?id=\".concat(res._id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }\n        }, __jsx(\"a\", {\n          className: \"jsx-1272619790\" + \" \" + \"btn btn-primary\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, \"View\"))));\n      })), __jsx(_JSXStyle, {\n        id: \"1272619790\",\n        __self: _this\n      }, \"a{color:white;}a:link{-webkit-text-decoration:none;text-decoration:none;color:white;}a:hover{color:white;}.card-columns{-webkit-column-count:3;column-count:3;}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcYWFzXzhcXERlc2t0b3BcXHJlc3RhdXJhbnQgc3RyaXBlXFxjb21wb25lbnRzXFxSZXN0YXVyYW50TGlzdC5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUEwRGEsQUFHNkIsQUFHUyxBQUlULEFBR0csWUFUakIsQUFPQSwwQkFHQSxZQVBjLFlBQ2QiLCJmaWxlIjoiQzpcXFVzZXJzXFxhYXNfOFxcRGVza3RvcFxccmVzdGF1cmFudCBzdHJpcGVcXGNvbXBvbmVudHNcXFJlc3RhdXJhbnRMaXN0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyogY29tcG9uZW50cy9SZXN0YXVyYW50TGlzdC9pbmRleC5qcyAqL1xuaW1wb3J0IGdxbCBmcm9tIFwiZ3JhcGhxbC10YWdcIjtcbmltcG9ydCBMaW5rIGZyb20gXCJuZXh0L2xpbmtcIjtcbmltcG9ydCB7IGdyYXBocWwgfSBmcm9tIFwicmVhY3QtYXBvbGxvXCI7XG5pbXBvcnQge1xuICBDYXJkLFxuICBDYXJkQm9keSxcbiAgQ2FyZEltZyxcbn0gZnJvbSBcInJlYWN0c3RyYXBcIjtcbmltcG9ydCB7IENhcmRUZXh0LCBDYXJkVGl0bGUsIENvbCwgUm93IH0gZnJvbSBcInJlYWN0c3RyYXBcIjtcblxuaW1wb3J0IHsgZW52IH0gZnJvbSBcIi4uLy4uL3V0aWxzL2NvbnN0YW50c1wiO1xuXG5jb25zdCBSZXN0YXVyYW50TGlzdCA9IChcbiAgeyBkYXRhOiB7IGxvYWRpbmcsIGVycm9yLCByZXN0YXVyYW50cyB9LCBzZWFyY2ggfSxcbiAgcmVxXG4pID0+IHtcbiAgaWYgKGVycm9yKSByZXR1cm4gXCJFcnJvciBsb2FkaW5nIHJlc3RhdXJhbnRzXCI7XG4gIC8vaWYgcmVzdGF1cmFudHMgYXJlIHJldHVybmVkIGZyb20gdGhlIEdyYXBoUUwgcXVlcnksIHJ1biB0aGUgZmlsdGVyIHF1ZXJ5XG4gIC8vYW5kIHNldCBlcXVhbCB0byB2YXJpYWJsZSByZXN0YXVyYW50U2VhcmNoXG5cbiAgaWYgKHJlc3RhdXJhbnRzICYmIHJlc3RhdXJhbnRzLmxlbmd0aCkge1xuICAgIC8vc2VhcmNoUXVlcnlcbiAgICBjb25zdCBzZWFyY2hRdWVyeSA9IHJlc3RhdXJhbnRzLmZpbHRlcihxdWVyeSA9PlxuICAgICAgcXVlcnkubmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaClcbiAgICApO1xuICAgIGlmIChzZWFyY2hRdWVyeS5sZW5ndGggIT0gMCkge1xuICAgICAgcmV0dXJuIChcbiAgICAgICAgPGRpdj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cImgtMTAwXCI+XG4gICAgICAgICAgICB7c2VhcmNoUXVlcnkubWFwKHJlcyA9PiAoXG4gICAgICAgICAgICAgIDxDYXJkXG4gICAgICAgICAgICAgICAgc3R5bGU9e3sgd2lkdGg6IFwiMzAlXCIsIG1hcmdpbjogXCIwIDEwcHhcIiB9fVxuICAgICAgICAgICAgICAgIGNsYXNzTmFtZT1cImgtMTAwXCJcbiAgICAgICAgICAgICAgICBrZXk9e3Jlcy5faWR9XG4gICAgICAgICAgICAgID5cbiAgICAgICAgICAgICAgICA8Q2FyZEltZ1xuICAgICAgICAgICAgICAgICAgdG9wPXt0cnVlfVxuICAgICAgICAgICAgICAgICAgc3R5bGU9e3sgaGVpZ2h0OiAyNTAgfX1cbiAgICAgICAgICAgICAgICAgIHNyYz17YCR7ZW52LkFQSV9VUkx9LyR7cmVzLmltYWdlLnVybH1gfVxuICAgICAgICAgICAgICAgIC8+XG4gICAgICAgICAgICAgICAgPENhcmRCb2R5PlxuICAgICAgICAgICAgICAgICAgPENhcmRUaXRsZT57cmVzLm5hbWV9PC9DYXJkVGl0bGU+XG4gICAgICAgICAgICAgICAgICA8Q2FyZFRleHQ+e3Jlcy5kZXNjcmlwdGlvbn08L0NhcmRUZXh0PlxuICAgICAgICAgICAgICAgIDwvQ2FyZEJvZHk+XG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjYXJkLWZvb3RlclwiPlxuICAgICAgICAgICAgICAgICAgPExpbmtcbiAgICAgICAgICAgICAgICAgICAgYXM9e2AvcmVzdGF1cmFudHMvJHtyZXMuX2lkfWB9XG4gICAgICAgICAgICAgICAgICAgIGhyZWY9e2AvcmVzdGF1cmFudHM/aWQ9JHtyZXMuX2lkfWB9XG4gICAgICAgICAgICAgICAgICA+XG4gICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzTmFtZT1cImJ0biBidG4tcHJpbWFyeVwiPlZpZXc8L2E+XG4gICAgICAgICAgICAgICAgICA8L0xpbms+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIDwvQ2FyZD5cbiAgICAgICAgICAgICkpfVxuICAgICAgICAgIDwvZGl2PlxuXG4gICAgICAgICAgPHN0eWxlIGpzeCBnbG9iYWw+XG4gICAgICAgICAgICB7YFxuICAgICAgICAgICAgICBhIHtcbiAgICAgICAgICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgYTpsaW5rIHtcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gICAgICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIGE6aG92ZXIge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAuY2FyZC1jb2x1bW5zIHtcbiAgICAgICAgICAgICAgICBjb2x1bW4tY291bnQ6IDM7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGB9XG4gICAgICAgICAgPC9zdHlsZT5cbiAgICAgICAgPC9kaXY+XG4gICAgICApO1xuICAgIH0gZWxzZSB7XG4gICAgICByZXR1cm4gPGgxPk5vIFJlc3RhdXJhbnRzIEZvdW5kPC9oMT47XG4gICAgfVxuICB9XG4gIHJldHVybiA8aDE+TG9hZGluZzwvaDE+O1xufTtcblxuY29uc3QgcXVlcnkgPSBncWxgXG4gIHtcbiAgICByZXN0YXVyYW50cyB7XG4gICAgICBfaWRcbiAgICAgIG5hbWVcbiAgICAgIGRlc2NyaXB0aW9uXG4gICAgICBpbWFnZSB7XG4gICAgICAgIHVybFxuICAgICAgfVxuICAgIH1cbiAgfVxuYDtcblJlc3RhdXJhbnRMaXN0LmdldEluaXRpYWxQcm9wcyA9IGFzeW5jICh7IHJlcSB9KSA9PiB7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKFwiaHR0cHM6Ly9hcGkuZ2l0aHViLmNvbS9yZXBvcy96ZWl0L25leHQuanNcIik7XG4gIGNvbnN0IGpzb24gPSBhd2FpdCByZXMuanNvbigpO1xuICByZXR1cm4geyBzdGFyczoganNvbi5zdGFyZ2F6ZXJzX2NvdW50IH07XG59O1xuLy8gVGhlIGBncmFwaHFsYCB3cmFwcGVyIGV4ZWN1dGVzIGEgR3JhcGhRTCBxdWVyeSBhbmQgbWFrZXMgdGhlIHJlc3VsdHNcbi8vIGF2YWlsYWJsZSBvbiB0aGUgYGRhdGFgIHByb3Agb2YgdGhlIHdyYXBwZWQgY29tcG9uZW50IChSZXN0YXVyYW50TGlzdClcbmV4cG9ydCBkZWZhdWx0IGdyYXBocWwocXVlcnksIHtcbiAgcHJvcHM6ICh7IGRhdGEgfSkgPT4gKHtcbiAgICBkYXRhXG4gIH0pXG59KShSZXN0YXVyYW50TGlzdCk7Il19 */\\n/*@ sourceURL=C:\\\\\\\\Users\\\\\\\\aas_8\\\\\\\\Desktop\\\\\\\\restaurant stripe\\\\\\\\components\\\\\\\\RestaurantList.js */\"));\n    } else {\n      return __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 14\n        }\n      }, \"No Restaurants Found\");\n    }\n  }\n\n  return __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 10\n    }\n  }, \"Loading\");\n};\n\n_c = RestaurantList;\nvar query = gql(_templateObject());\n\nRestaurantList.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n    var req, res, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            req = _ref2.req;\n            _context.next = 3;\n            return fetch(\"https://api.github.com/repos/zeit/next.js\");\n\n          case 3:\n            res = _context.sent;\n            _context.next = 6;\n            return res.json();\n\n          case 6:\n            json = _context.sent;\n            return _context.abrupt(\"return\", {\n              stars: json.stargazers_count\n            });\n\n          case 8:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}(); // The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (RestaurantList)\n\n\nexport default graphql(query, {\n  props: function props(_ref4) {\n    var data = _ref4.data;\n    return {\n      data: data\n    };\n  }\n})(RestaurantList);\n\nvar _c;\n\n$RefreshReg$(_c, \"RestaurantList\");","map":{"version":3,"sources":["C:/Users/aas_8/Desktop/restaurant stripe/components/RestaurantList.js"],"names":["gql","Link","graphql","Card","CardBody","CardImg","CardText","CardTitle","Col","Row","env","RestaurantList","req","data","loading","error","restaurants","search","length","searchQuery","filter","query","name","toLowerCase","includes","map","res","width","margin","_id","height","API_URL","image","url","description","getInitialProps","fetch","json","stars","stargazers_count","props"],"mappings":"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","sourcesContent":["/* components/RestaurantList/index.js */\nimport gql from \"graphql-tag\";\nimport Link from \"next/link\";\nimport { graphql } from \"react-apollo\";\nimport {\n  Card,\n  CardBody,\n  CardImg,\n} from \"reactstrap\";\nimport { CardText, CardTitle, Col, Row } from \"reactstrap\";\n\nimport { env } from \"../../utils/constants\";\n\nconst RestaurantList = (\n  { data: { loading, error, restaurants }, search },\n  req\n) => {\n  if (error) return \"Error loading restaurants\";\n  //if restaurants are returned from the GraphQL query, run the filter query\n  //and set equal to variable restaurantSearch\n\n  if (restaurants && restaurants.length) {\n    //searchQuery\n    const searchQuery = restaurants.filter(query =>\n      query.name.toLowerCase().includes(search)\n    );\n    if (searchQuery.length != 0) {\n      return (\n        <div>\n          <div className=\"h-100\">\n            {searchQuery.map(res => (\n              <Card\n                style={{ width: \"30%\", margin: \"0 10px\" }}\n                className=\"h-100\"\n                key={res._id}\n              >\n                <CardImg\n                  top={true}\n                  style={{ height: 250 }}\n                  src={`${env.API_URL}/${res.image.url}`}\n                />\n                <CardBody>\n                  <CardTitle>{res.name}</CardTitle>\n                  <CardText>{res.description}</CardText>\n                </CardBody>\n                <div className=\"card-footer\">\n                  <Link\n                    as={`/restaurants/${res._id}`}\n                    href={`/restaurants?id=${res._id}`}\n                  >\n                    <a className=\"btn btn-primary\">View</a>\n                  </Link>\n                </div>\n              </Card>\n            ))}\n          </div>\n\n          <style jsx global>\n            {`\n              a {\n                color: white;\n              }\n              a:link {\n                text-decoration: none;\n                color: white;\n              }\n              a:hover {\n                color: white;\n              }\n              .card-columns {\n                column-count: 3;\n              }\n            `}\n          </style>\n        </div>\n      );\n    } else {\n      return <h1>No Restaurants Found</h1>;\n    }\n  }\n  return <h1>Loading</h1>;\n};\n\nconst query = gql`\n  {\n    restaurants {\n      _id\n      name\n      description\n      image {\n        url\n      }\n    }\n  }\n`;\nRestaurantList.getInitialProps = async ({ req }) => {\n  const res = await fetch(\"https://api.github.com/repos/zeit/next.js\");\n  const json = await res.json();\n  return { stars: json.stargazers_count };\n};\n// The `graphql` wrapper executes a GraphQL query and makes the results\n// available on the `data` prop of the wrapped component (RestaurantList)\nexport default graphql(query, {\n  props: ({ data }) => ({\n    data\n  })\n})(RestaurantList);"]},"metadata":{},"sourceType":"module"}